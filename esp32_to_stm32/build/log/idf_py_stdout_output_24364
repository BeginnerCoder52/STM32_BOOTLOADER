Command: ninja flash
[1/5] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\File_dai_hoc_UIT\Thuc_Tap_FSOFT\INTERN_PROJECT\STM32_BOOTLOADER\esp32_to_stm32\build\esp-idf\esptool_py && D:\Espressif\Espressif\python_env\idf5.5_py3.11_env\Scripts\python.exe D:/Espressif/Espressif/frameworks/esp-idf-v5.5/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/File_dai_hoc_UIT/Thuc_Tap_FSOFT/INTERN_PROJECT/STM32_BOOTLOADER/esp32_to_stm32/build/partition_table/partition-table.bin D:/File_dai_hoc_UIT/Thuc_Tap_FSOFT/INTERN_PROJECT/STM32_BOOTLOADER/esp32_to_stm32/build/softap_sta.bin"
softap_sta.bin binary size 0xd7410 bytes. Smallest app partition is 0x1c0000 bytes. 0xe8bf0 bytes (52%) free.
[2/5] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\File_dai_hoc_UIT\Thuc_Tap_FSOFT\INTERN_PROJECT\STM32_BOOTLOADER\esp32_to_stm32\build\bootloader\esp-idf\esptool_py && D:\Espressif\Espressif\python_env\idf5.5_py3.11_env\Scripts\python.exe D:/Espressif/Espressif/frameworks/esp-idf-v5.5/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/File_dai_hoc_UIT/Thuc_Tap_FSOFT/INTERN_PROJECT/STM32_BOOTLOADER/esp32_to_stm32/build/bootloader/bootloader.bin"
Bootloader binary size 0x6680 bytes. 0x980 bytes (8%) free.
[3/5] No install step for 'bootloader'
[4/5] Completed 'bootloader'
[4/5] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\Espressif\Espressif\frameworks\esp-idf-v5.5\components\esptool_py && D:\Espressif\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=D:/Espressif/Espressif/frameworks/esp-idf-v5.5 -D SERIAL_TOOL=D:/Espressif/Espressif/python_env/idf5.5_py3.11_env/Scripts/python.exe;;D:/Espressif/Espressif/frameworks/esp-idf-v5.5/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/File_dai_hoc_UIT/Thuc_Tap_FSOFT/INTERN_PROJECT/STM32_BOOTLOADER/esp32_to_stm32/build -P D:/Espressif/Espressif/frameworks/esp-idf-v5.5/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 softap_sta.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.1
Serial port COM4
Connecting...................
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: a0:a3:b3:a9:fb:bc
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.

A serial exception error occurred: Cannot configure port, something went wrong. Original message: OSError(22, 'The I/O operation has been aborted because of either a thread exit or an application request.', None, 995)
Note: This error originates from pySerial. It is likely not a problem with esptool, but with the hardware connection or drivers.
For troubleshooting steps visit: https://docs.espressif.com/projects/esptool/en/latest/troubleshooting.html
FAILED: CMakeFiles/flash D:/File_dai_hoc_UIT/Thuc_Tap_FSOFT/INTERN_PROJECT/STM32_BOOTLOADER/esp32_to_stm32/build/CMakeFiles/flash 
C:\WINDOWS\system32\cmd.exe /C "cd /D D:\Espressif\Espressif\frameworks\esp-idf-v5.5\components\esptool_py && D:\Espressif\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=D:/Espressif/Espressif/frameworks/esp-idf-v5.5 -D SERIAL_TOOL=D:/Espressif/Espressif/python_env/idf5.5_py3.11_env/Scripts/python.exe;;D:/Espressif/Espressif/frameworks/esp-idf-v5.5/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/File_dai_hoc_UIT/Thuc_Tap_FSOFT/INTERN_PROJECT/STM32_BOOTLOADER/esp32_to_stm32/build -P D:/Espressif/Espressif/frameworks/esp-idf-v5.5/components/esptool_py/run_serial_tool.cmake"
ninja: build stopped: subcommand failed.
